name: "Pull Request Notification"

permissions:
  id-token: write # required to use OIDC authentication
  contents: write # required to checkout the code from the repo
  pull-requests: write # required to comment on the PR

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

env:
  S3_BUCKET: "docs-krmpesan-app"
  AWS_ROLE: arn:aws:iam::057675665881:role/serverless

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Clone Repository
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: npm ci
      - name: Build ReactJS Artifact
        run: npm run build
        env:
          CI: false
          REACT_APP_API_URL: ${{ env.APP_API }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          role-duration-seconds: 900 # the ttl of the session, in seconds.
          aws-region: ap-southeast-1
      - name: Check S3 Bucket If Exist or Not
        uses: tuler/s3-check-action@master
        id: check
        env:
          FILE: "index.html"
          AWS_S3_BUCKET: "${{ env.S3_BUCKET }}-pr-${{ github.event.pull_request.number }}"
      - name: Create S3 Bucket If Not Exist
        if: steps.check.outputs.exists == 'false'
        run: |
          aws s3api create-bucket \
            --bucket "${{ env.S3_BUCKET }}-pr-${{ github.event.pull_request.number }}" \
            --region ${{ env.AWS_REGION }} \
            --create-bucket-configuration LocationConstraint=${{ env.AWS_REGION }} \
            --acl public-read
      - name: Setup S3 Static Hosting If Not Exist
        if: steps.check.outputs.exists == 'false'
        run: |
          aws s3 website s3://${{ env.S3_BUCKET }}-pr-${{ github.event.pull_request.number }} \
            --index-document index.html \
            --error-document index.html
      - name: Deploy to S3
        run: |
          aws s3 sync . s3://"${{ env.S3_BUCKET }}-pr-${{ github.event.pull_request.number }}" \
            --exact-timestamps --delete --acl public-read
        working-directory: build

  notification:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Clone Repository
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          role-duration-seconds: 900 # the ttl of the session, in seconds.
          aws-region: ap-southeast-1
      - uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: "/wa/token"
          env_variable_name: "WA_TOKEN"
      - uses: "marvinpinto/action-inject-ssm-secrets@latest"
        with:
          ssm_parameter: "/wa/groupid"
          env_variable_name: "WA_GROUP_ID"
      - uses: actions/github-script@v5
        with:
          script: |
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Hi @${{ github.event.pull_request.user.login }},\n\nYour Pull Request has been successfully deployed to http://${{ env.S3_BUCKET }}-pr-${{ github.event.pull_request.number }}.s3-website-${{ env.AWS_REGION }}.amazonaws.com'
            })
      - name: Sending Notification to Group
        if: github.event.action == 'opened' || github.event.action == 'reopened'
        run: |
          if [ "${{ github.event.pull_request.base.ref }}" == "main" ]; then
            curl -X POST \
              "https://region01.krmpesan.com/api/v2/message/send-group-text" \
              -H "Content-Type: application/json" \
              -H "Accept: application/json" \
              -H "Authorization: Bearer ${{ env.WA_TOKEN }}" \
              -d '{"groupid":"${{ env.WA_GROUP_ID }}","message":"Pull Request Open By *${{ github.event.pull_request.user.login }}*\nTitle: *${{ github.event.pull_request.title }}*\nLink: ${{ github.event.pull_request.html_url }}\nBranch From: ${{ github.event.pull_request.head.ref }}\nBranch Target: ${{ github.event.pull_request.base.ref }}\nPreview: http://${{ env.S3_BUCKET }}-pr-${{ github.event.pull_request.number }}.s3-website-${{ env.AWS_REGION }}.amazonaws.com"}'
          fi
