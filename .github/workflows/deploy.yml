name: Deploy Main Branch

permissions:
  id-token: write # required to use OIDC authentication
  contents: write # required to checkout the code from the repo
  pull-requests: write # required to comment on the PR

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  APP_NAME: "Docs Krmpesan"
  AWS_CLOUDFRONT_ID: "EWEFDDPGWH927"
  S3_BUCKET: "docs-krmpesan-app"
  APP_URL: "https://docs.krmpesan.app"
  AWS_ROLE: arn:aws:iam::057675665881:role/serverless

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Create commit comment
        uses: peter-evans/commit-comment@v2
        with:
          body: |
            Commit telah kami terima, saat ini code terbaru akan di Deploy secara automatis ke:
            - Domain: **${{ env.APP_URL }}**
            - Deploy Status: **https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}**
            Anda akan menerima notifikasi jika deploy telah selesai dilakukan, harap menunggu notifikasi selanjutnya.!
  build:
    runs-on: ubuntu-latest
    needs: check

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Clone Repository
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: npm ci
      - name: Build ReactJS Artifact
        run: npm run build
        env:
          CI: false
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ env.AWS_ROLE }}
          role-duration-seconds: 900 # the ttl of the session, in seconds.
          aws-region: ap-southeast-3
      - name: Deploy to S3
        run: |
          aws s3 sync . s3://${{ env.S3_BUCKET }} --exact-timestamps --delete --cache-control max-age=31536000,public --acl public-read
          aws s3 cp index.html s3://${{ env.S3_BUCKET }}/index.html --metadata-directive REPLACE --cache-control max-age=0 --content-type "text/html" --acl public-read
        working-directory: build
      - name: Invalidate CloudFront Cache From S3
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.AWS_CLOUDFRONT_ID }} \
            --paths "/index.html"

          aws cloudfront create-invalidation \
            --distribution-id ${{ env.AWS_CLOUDFRONT_ID }} \
            --paths "/admin/config.yml"

  done:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Create commit comment
        uses: peter-evans/commit-comment@v2
        with:
          body: |
            Deploy sukses, anda bisa mengecek preview website di:
            - Domain: **${{ env.APP_URL }}**
            - Deploy Status: **https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}**
            Jika ada kendala, jangan ragu untuk menghubungi team devops.!
